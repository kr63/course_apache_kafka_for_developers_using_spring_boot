version: '3.7'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'true'
    volumes:
      - ./docker-data/zookeeper/data:/opt/zookeeper-3.4.13/data
    networks:
      - kafka-net
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.12-2.3.1
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'true'
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LOG_DIRS: /logs
    volumes:
      - ./bin:/data
      - ./docker-data/kafka/logs:/logs
    depends_on:
      - zookeeper
    networks:
      - kafka-net
  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: 'no'
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
    networks:
      - kafka-net

networks:
  kafka-net:
    name: kafka-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.18.0/24
